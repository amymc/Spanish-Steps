//Reference:Perkins, T, ActionScript 3.0 in Flash Professional CS5 Essential Training// http://www.lynda.com/ActionScript-3-tutorials/ActionScript-3-in-Flash-CS5-Essential-Training/67685-2.html//Accessed: November 20th, 2012package {	//Import classes so they are available to use throughout the package	import flash.display.*;	import flash.events.*;	import flash.media.*;	import flash.net.URLRequest;	//all of the draggable elements are on one frame so the sprite classed is used instead of movie clip	public class DragDrop extends Sprite	{		//These variables will hold the original X and Y positons of the draggable objects		var origX:Number;		var origY:Number;		//sets the target as a display object		var target:DisplayObject;			public function DragDrop()		{			//captures the original x position of object			origX = x;			//captures the original y position of object			origY = y;			//'listens' for the mouse button to be pressed			addEventListener(MouseEvent.MOUSE_DOWN, drag);			//treats the object as a button, cursor will change when user hovers over it.			buttonMode = true;		}		function drag(evt:MouseEvent):void		{			//runs drop function when the mouse button is released					//'listens' for the mouse event on the whole stage rather than a particular object			stage.addEventListener(MouseEvent.MOUSE_UP, drop);			startDrag();			//brings current object to the front to ensure object 			//being dragged doesn't appear under other objects			parent.addChild(this);		}		function drop(evt:MouseEvent):void		{			//removes the event listener once the mouse button has been released			stage.removeEventListener(MouseEvent.MOUSE_UP, drop);			stopDrag();			//checks if the object being dropped touches the target			if (hitTestObject(target))			{				//hides the object being dropped				visible = false;				//makes the target visible				target.alpha = 1;								//calls the match function in the parent class i.e 'park4' 				//treats the parent class as an object				Object(parent).match();				//plays the audio clip which matches the target				var currentAudio:Sound = new Sound(new URLRequest(target.name + ".mp3"));				currentAudio.play();			}			//Objects will snap back to their original positions no matter where they are dropped			x = origX;			y = origY;		}	}}